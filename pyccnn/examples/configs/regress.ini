[Output]
class='ScipyPerceptron'
activations=['linear']
loss_function='mse'

[Candidate]
class='TensorflowPerceptron'
activations=['tanh', 'tanh', 'tanh', 'tanh', 'tanh']
loss_function='S1'
optimizer='AdamOptimizer'
optimizer_args={'learning_rate': 0.01}
stopping_rule='EarlyStoppingMonitor'
stopping_rule_kwargs={'min_delta': 1e-3, 'patience': 500, 'max_iters': 10000, 'normalize': True}
regularizer='l2_loss'
reg_penalty=1e-4
batch_size=999999

[Network]
num_inputs=1
num_outputs=1
metric_function='fvu'
lambda_param=0.8

[Train]
stopping_rule='EarlyStoppingMonitor'
stopping_rule_kwargs={'min_delta': 1e-10, 'patience': 10, 'max_iters': 10}